import json
import os
import subprocess
import uuid

from flask import Flask
from flask import render_template
from flask import request

from functions import *
from queries import process_input, check_query_status

app = Flask(__name__)

# set atlas directory
atlas_dir = "/home/ran/atlas_project/latest/atlasofliegroups/"
#atlas_dir = "/Users/richard.rast/atlas/atlasofliegroups/"


@app.route("/", methods=['GET', 'POST'])
def main_page():
    cmd = ["../atlas all"]
    p = subprocess.Popen(cmd,
                         cwd=atlas_dir+"atlas-scripts",
                         shell=True,
                         universal_newlines=True,
                         stdout=subprocess.PIPE,
                         stderr=subprocess.PIPE,
                         stdin=subprocess.PIPE)
    usr_request = str(request.form.get("first_options"))
    random_id = str(uuid.uuid4())  # attach random str to the file name generated by input_to_at
    modified_input = input_to_at(usr_request, random_id)
    feed_to_atlas = "<"+"\""+str(os.getcwd())+"/inputs/"+"input_file.at"+"\""  # this is currently not in use
    tmp_input = "<\"/tmp/input_file_"+random_id+".at\""
    output, err = p.communicate(input=tmp_input)
    subprocess.call("rm /tmp/input_file_"+random_id+".at", shell=True)
    return render_template("main.html",
                           selected=usr_request.split('\\n')[0],
                           atlas_input=modified_input,
                           atlas_output=trim_output(output)+'\n'+err)


@app.route("/newquery", methods=['POST'])
def get_queried():
    user_input = str(request.form.get('query'))
    query_id = process_input(user_input, atlas_dir)
    output = {
        'query_id': query_id
    }
    return json.dumps(output)


@app.route("/checkquery", methods=['GET'])
def check_on_query():
    query_id = str(request.args.get('query_id'))
    status, output, err = check_query_status(query_id)

    response = {
        'status': status,
        'output': output,
        'error': err
    }

    return json.dumps(response)


if __name__ == "__main__":
    app.run(debug=True)
